version: '3'

services:
  zk:
    image: confluentinc/cp-zookeeper:5.1.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zk_secrets:/etc/zookeeper/secrets
      - zk_data:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zk
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_secrets:/etc/kafka/secrets

  kafka-magic:
    image: digitsy/kafka-magic
    ports:
      - '28080:80'
    depends_on:
      - kafka

  graphite:
    image: graphiteapp/graphite-statsd:1.1.3
    ports:
      - '2003-2004:2003-2004'
      - '2023-2024:2023-2024'
      - '8125:8125/udp'
      - '8126:8126'
      - '8082:80'
    volumes:
      - graphite_conf:/opt/graphite/conf
      - graphite_data:/opt/graphite/storage
      - statsd_data:/opt/statsd

  frontend:
    image: allegro/hermes-frontend-test-qpt
    ports:
      - "8080:8080"
    depends_on:
      - zk
      - kafka
      - graphite
      - elasticsearch
    environment:
      TRACKER_ELASTICSEARCH_CLUSTER_NAME: docker-cluster
      TRACKER_ELASTICSEARCH_PORT: 9300
      TRACKER_ELASTICSEARCH_HOSTS: elasticsearch
      TRACKER_ELASTICSEARCH_QUEUE_CAPACITY: 2
      TRACKER_ELASTICSEARCH_COMMIT_INTERVAL: 10

  consumers:
    image: allegro/hermes-consumers-test-qpt
    depends_on:
      - zk
      - kafka
      - graphite
      - elasticsearch
    environment:
      TRACKER_ELASTICSEARCH_CLUSTER_NAME: docker-cluster
      TRACKER_ELASTICSEARCH_PORT: 9300
      TRACKER_ELASTICSEARCH_HOSTS: elasticsearch
      TRACKER_ELASTICSEARCH_QUEUE_CAPACITY: 2
      TRACKER_ELASTICSEARCH_COMMIT_INTERVAL: 10

  management:
    image: allegro/hermes-management-test-qpt
    ports:
      - "8090:8090"
    depends_on:
      - zk
      - kafka
      - graphite
      - elasticsearch
    environment:
      #LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BEANS_FACTORY_SUPPORT: ALL
      SPRING_MAIN_ALLOWBEANDEFINITIONOVERRIDING: "true"
      SPRING_DATA_ELASTICSEARCH_CLUSTERNODES: "elasticsearch:9300"
      SPRING_DATA_ELASTICSEARCH_CLUSTERNAME: "docker-cluster"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.0
    depends_on:
      - zk
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zk:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    #build:
    #  context: elasticsearch/
    #  args:
    #    ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    #build:
    #  context: kibana/
    #  args:
    #    ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  graphite_conf:
  graphite_data:
  statsd_data:
  zk_secrets:
  zk_data:
  zk_log:
  kafka_data:
  kafka_secrets:
  elasticsearch:




